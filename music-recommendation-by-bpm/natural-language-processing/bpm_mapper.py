class BPMMapper:
    """
    감정 레이블을 음악의 BPM 범위와 매핑하는 클래스입니다.
    사용자의 감정에 따라 적절한 음악 BPM 범위를 제공합니다.
    """
    def __init__(self):
        """
        감정 레이블과 BPM 범위 간의 매핑 규칙을 초기화합니다.
        이 매핑은 모델의 60가지 세분화된 감정 레이블과
        일반적인 음악 분위기 및 BPM 상관관계를 기반으로 정의되었습니다.
        """
        self.emotion_to_bpm_map = {
            # --- 긍정적/활기찬 감정 (높은 BPM: 120-160+) ---
            "기쁨": (120, 140),       # 보편적으로 활기찬 느낌
            "신이 난": (130, 160),    # 매우 활동적이고 빠른 음악
            "흥분": (140, 170),       # 최고조의 활기, 댄스/EDM 등에 적합
            "감사하는": (110, 130),   # 따뜻하고 긍정적이지만 너무 빠르지 않은
            "신뢰하는": (100, 120),   # 안정적이면서 긍정적인 느낌
            "편안한": (80, 110),      # 차분하고 안정적인, 집중에도 도움
            "만족스러운": (90, 120),   # 평화롭고 만족스러운
            "느긋": (70, 100),        # 매우 여유롭고 차분한
            "안도": (90, 110),        # 긴장 완화 후의 편안함
            "자신하는": (100, 125),   # 자신감 있는, 약간의 활기

            # --- 부정적/차분한 감정 (낮은 BPM: 50-90) ---
            "슬픔": (60, 80),         # 발라드, 잔잔한 곡
            "우울한": (50, 70),       # 매우 침체된, 느린 곡
            "비통한": (40, 60),       # 깊은 슬픔, 매우 느린 곡
            "후회되는": (60, 80),     # 회상적이고 차분한
            "낙담한": (50, 70),       # 우울함과 유사
            "마비된": (40, 60),       # 무기력한, 극도로 느린
            "염세적인": (50, 70),     # 어둡고 느린
            "눈물이 나는": (60, 85),  # 감성적인 발라드
            "실망한": (65, 85),       # 다소 느리고 차분한
            "환멸을 느끼는": (60, 80), # 냉소적이고 차분한

            # --- 불안/긴장/복잡한 감정 (중간 BPM 또는 특정 분위기) ---
            "불안": (80, 110),        # 긴장감을 줄여주는 차분한 곡 또는 약간 빠른 곡
            "두려운": (70, 100),       # 긴장감 있는 배경음악, 또는 안정적인 곡으로 완화
            "스트레스 받는": (90, 120), # 경쾌하거나 혹은 차분한 곡으로 완화
            "취약한": (70, 90),        # 부드럽고 보호적인 느낌
            "혼란스러운": (80, 110),   # 안정감을 주는 곡
            "당혹스러운": (80, 110),   # 혼란스러운과 유사
            "회의적인": (70, 95),       # 깊이 생각하게 하는 곡
            "걱정스러운": (80, 105),   # 안정감을 주는 곡
            "조심스러운": (70, 90),     # 섬세하고 조용한
            "초조한": (100, 130),     # 에너지를 발산하거나 진정시키는 리듬

            # --- 분노/적대적 감정 (강렬하거나 중간 BPM) ---
            "분노": (120, 150),       # 락, 메탈, 강렬한 힙합 등 높은 에너지를 표출하는 곡
            "툴툴대는": (90, 120),     # 다소 시니컬하거나 리듬감 있는
            "좌절한": (90, 120),      # 답답함을 해소할 수 있는 곡
            "짜증내는": (100, 130),    # 불만을 표출하는, 혹은 진정시키는
            "방어적인": (80, 110),     # 묵직하거나 안정적인
            "악의적인": (100, 130),    # 다소 어둡고 리듬감 있는
            "안달하는": (110, 140),    # 빠르게 전환되거나 에너지를 주는

            # --- 상처/부정적 관계 감정 ---
            "상처": (60, 90),         # 위로가 되는 차분한 곡
            "질투하는": (80, 110),    # 복잡한 감정을 표현하는
            "배신당한": (60, 90),     # 슬픔과 유사
            "고립된": (60, 90),       # 외로움을 달래는 차분한 곡
            "충격 받은": (80, 110),    # 감정을 가라앉히는
            "가난한 불우한": (50, 80), # 공감하고 위로하는
            "희생된": (50, 80),       # 묵직하거나 차분한
            "억울한": (70, 100),       # 답답함을 풀어주는
            "괴로워하는": (60, 90),    # 깊은 고통을 표현

            # --- 당황/부정적 자아 감정 ---
            "고립된(당황한)": (80, 110), # 혼란스러운과 유사
            "남의 시선을 의식하는": (70, 100), # 조심스럽거나 차분한
            "외로운": (60, 90),        # 고립된과 유사
            "열등감": (70, 100),       # 자신감을 북돋아 주거나 차분하게
            "죄책감의": (60, 90),      # 반성적인
            "부끄러운": (70, 95),      # 조용하고 차분한
            "혐오스러운": (90, 120),   # 강렬하거나 불쾌함을 표현
            "한심한": (60, 90),        # 위로가 필요한
            "혼란스러운(당황한)": (80, 110), # 혼란스러운과 유사
            
            # --- 기타 (매핑이 불분명하거나 특정 상황에 따라 달라지는 감정) ---
            # 60가지 레이블 중 여기에 없는 것은 아래 default_bpm_range로 처리됩니다.
            # 필요에 따라 매핑을 더 추가하거나 수정할 수 있습니다.
        }
        
        # 매핑되지 않은 감정에 대한 기본 BPM 범위 설정
        # (sentiment_analyzer에서 낮은 스코어로 예측되었거나, 매핑되지 않은 감정)
        self.default_bpm_range = (90, 120) # 일반적인 팝 음악 BPM
        print(f"BPM 매퍼 초기화 완료. 기본 BPM 범위: {self.default_bpm_range}")

    def get_bpm_range(self, emotion_label: str) -> tuple:
        """
        주어진 감정 레이블에 해당하는 BPM 범위를 반환합니다.
        매핑되지 않은 감정 레이블의 경우 기본 BPM 범위를 반환합니다.

        Args:
            emotion_label (str): hun3359/klue-bert-base-sentiment 모델이 예측한 감정 레이블.

        Returns:
            tuple: (min_bpm, max_bpm) 형태의 BPM 범위 튜플.
        """
        bpm_range = self.emotion_to_bpm_map.get(emotion_label)
        
        if bpm_range:
            return bpm_range
        else:
            # 매핑되지 않은 감정에 대한 경고 (디버깅용)
            print(f"경고: '{emotion_label}' 감정에 대한 BPM 매핑이 정의되지 않았습니다. 기본 BPM 범위 {self.default_bpm_range}를 사용합니다.")
            return self.default_bpm_range

# 이 파일이 직접 실행될 때만 실행되는 테스트 코드
if __name__ == "__main__":
    mapper = BPMMapper()
    
    print("\n--- BPM 매핑 테스트 ---")
    
    # 긍정적/활기찬 감정 테스트
    print(f"감정: '신이 난' -> BPM: {mapper.get_bpm_range('신이 난')}")
    print(f"감정: '기쁨' -> BPM: {mapper.get_bpm_range('기쁨')}")
    print(f"감정: '편안한' -> BPM: {mapper.get_bpm_range('편안한')}")

    # 부정적/차분한 감정 테스트
    print(f"감정: '우울한' -> BPM: {mapper.get_bpm_range('우울한')}")
    print(f"감정: '슬픔' -> BPM: {mapper.get_bpm_range('슬픔')}")
    print(f"감정: '비통한' -> BPM: {mapper.get_bpm_range('비통한')}")

    # 불안/긴장/복잡한 감정 테스트
    print(f"감정: '스트레스 받는' -> BPM: {mapper.get_bpm_range('스트레스 받는')}")
    print(f"감정: '혼란스러운' -> BPM: {mapper.get_bpm_range('혼란스러운')}")
    print(f"감정: '초조한' -> BPM: {mapper.get_bpm_range('초조한')}")

    # 분노/적대적 감정 테스트
    print(f"감정: '분노' -> BPM: {mapper.get_bpm_range('분노')}")
    print(f"감정: '짜증내는' -> BPM: {mapper.get_bpm_range('짜증내는')}")

    # 매핑되지 않은 감정 테스트 (기본값 반환 확인)
    print(f"감정: '알 수 없는 감정' -> BPM: {mapper.get_bpm_range('알 수 없는 감정')}")
    print(f"감정: '놀란' (60가지 레이블에 없는 가정) -> BPM: {mapper.get_bpm_range('놀란')}")